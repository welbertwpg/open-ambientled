<UserControl x:Class="OpenAmbientLED.WpfApp.UserControls.ColorTool"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:OpenAmbientLED.WpfApp.Converters"
             xmlns:local="clr-namespace:OpenAmbientLED.WpfApp.UserControls"
             xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
            <converters:MultiValueEqualityConverter x:Key="MultiValueEqualityConverter" />

            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0" />
            </Style>

            <Style TargetType="TextBlock" x:Key="HexLabelTextBlock" BasedOn="{StaticResource MaterialDesignBody2TextBlock}">
                <Setter Property="Margin" Value="8" />
            </Style>

            <Style TargetType="TextBlock" x:Key="LabelTextBox">
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0 0 0 4" />
            </Style>

            <DataTemplate DataType="{x:Type Color}" x:Key="SwatchColorTemplate">
                <Button Height="25" Width="25" Background="{Binding Converter={StaticResource ColorToBrushConverter}}"
                        Command="{Binding DataContext.ChangeHueCommand, RelativeSource={RelativeSource AncestorType=local:ColorTool}}" 
                        CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Setter Property="local:ButtonAssist.UniformCornerRadius" Value="0" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Margin" Value="1 1 0 0" />
                            <Setter Property="materialDesign:RippleAssist.IsDisabled" Value="True" />
                            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0" />
                            <Setter Property="Tag" Value="0" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(local:ButtonAssist.UniformCornerRadius)" 
                                                                 To="8" Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(local:ButtonAssist.UniformCornerRadius)" 
                                                                 From="8" Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                            <Binding RelativeSource="{RelativeSource AncestorType=local:ColorTool}" Path="DataContext.SelectedColor" Mode="OneWay" />
                                            <Binding Mode="OneWay"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(local:ButtonAssist.UniformCornerRadius)" 
                                                                 To="20" Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(local:ButtonAssist.UniformCornerRadius)" 
                                                                 From="20" Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <!-- Color picker section -->
    <DockPanel Margin="16">
        <UniformGrid Columns="1" DockPanel.Dock="Right">
            <RadioButton x:Name="MdPaletteButton" Style="{StaticResource MaterialDesignTabRadioButton}" Margin="4" Checked="MdPaletteButton_Checked" Content="Palette"/>
            <RadioButton x:Name="CustomPaletteButton" Style="{StaticResource MaterialDesignTabRadioButton}" Margin="4" Checked="CustomPaletteButton_Checked" Content="Custom"/>
        </UniformGrid>
        <Grid DockPanel.Dock="Left">
            <Grid Visibility="{Binding IsChecked, ElementName=CustomPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="160" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <DockPanel>
                    <TextBox Text="{Binding Color, ElementName=ColorPicker, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource MaterialDesignFilledTextFieldTextBox}" materialDesign:HintAssist.Hint="Color HEX value"
                                     DockPanel.Dock="Top" Margin="2,0,10,2"/>
                    <Rectangle Fill="{Binding Color, ElementName=ColorPicker, Converter={StaticResource ColorToBrushConverter}}" Margin="2,0,10,2" />
                </DockPanel>
                <materialDesign:ColorPicker Color="{Binding SelectedColor}" Grid.Column="1" x:Name="ColorPicker" />
            </Grid>

            <ScrollViewer Visibility="{Binding IsChecked, ElementName=MdPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize" Value="9" />
                                <Setter Property="Width" Value="25" />
                                <Setter Property="Margin" Value="1 1 0 0" />
                                <Setter Property="TextAlignment" Value="Center" />
                            </Style>
                        </StackPanel.Resources>
                        <Rectangle Width="80" />
                        <TextBlock>50</TextBlock>
                        <TextBlock>100</TextBlock>
                        <TextBlock>200</TextBlock>
                        <TextBlock>300</TextBlock>
                        <TextBlock>400</TextBlock>
                        <TextBlock>500</TextBlock>
                        <TextBlock>600</TextBlock>
                        <TextBlock>700</TextBlock>
                        <TextBlock>800</TextBlock>
                        <TextBlock>900</TextBlock>
                        <TextBlock>A100</TextBlock>
                        <TextBlock>A200</TextBlock>
                        <TextBlock>A400</TextBlock>
                        <TextBlock>A700</TextBlock>
                    </StackPanel>
                    <ItemsControl ItemsSource="{Binding Swatches}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type materialDesignColors:ISwatch}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}" Width="80" VerticalAlignment="Center" />
                                    <ItemsControl ItemsSource="{Binding Hues}" ItemTemplate="{StaticResource SwatchColorTemplate}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </DockPanel>
</UserControl>
